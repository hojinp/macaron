// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meringue.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_meringue_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_meringue_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_meringue_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_meringue_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_meringue_2eproto;
namespace meringue {
class DeleteSingleMDRequest;
struct DeleteSingleMDRequestDefaultTypeInternal;
extern DeleteSingleMDRequestDefaultTypeInternal _DeleteSingleMDRequest_default_instance_;
class DeleteSingleMDResponse;
struct DeleteSingleMDResponseDefaultTypeInternal;
extern DeleteSingleMDResponseDefaultTypeInternal _DeleteSingleMDResponse_default_instance_;
class EvictionRequest;
struct EvictionRequestDefaultTypeInternal;
extern EvictionRequestDefaultTypeInternal _EvictionRequest_default_instance_;
class EvictionResponse;
struct EvictionResponseDefaultTypeInternal;
extern EvictionResponseDefaultTypeInternal _EvictionResponse_default_instance_;
class GCRequest;
struct GCRequestDefaultTypeInternal;
extern GCRequestDefaultTypeInternal _GCRequest_default_instance_;
class GCResponse;
struct GCResponseDefaultTypeInternal;
extern GCResponseDefaultTypeInternal _GCResponse_default_instance_;
class GetSingleMDRequest;
struct GetSingleMDRequestDefaultTypeInternal;
extern GetSingleMDRequestDefaultTypeInternal _GetSingleMDRequest_default_instance_;
class GetSingleMDResponse;
struct GetSingleMDResponseDefaultTypeInternal;
extern GetSingleMDResponseDefaultTypeInternal _GetSingleMDResponse_default_instance_;
class InitializeRequest;
struct InitializeRequestDefaultTypeInternal;
extern InitializeRequestDefaultTypeInternal _InitializeRequest_default_instance_;
class InitializeResponse;
struct InitializeResponseDefaultTypeInternal;
extern InitializeResponseDefaultTypeInternal _InitializeResponse_default_instance_;
class PutSingleMDRequest;
struct PutSingleMDRequestDefaultTypeInternal;
extern PutSingleMDRequestDefaultTypeInternal _PutSingleMDRequest_default_instance_;
class PutSingleMDResponse;
struct PutSingleMDResponseDefaultTypeInternal;
extern PutSingleMDResponseDefaultTypeInternal _PutSingleMDResponse_default_instance_;
class SortAndWriteRequest;
struct SortAndWriteRequestDefaultTypeInternal;
extern SortAndWriteRequestDefaultTypeInternal _SortAndWriteRequest_default_instance_;
class SortAndWriteResponse;
struct SortAndWriteResponseDefaultTypeInternal;
extern SortAndWriteResponseDefaultTypeInternal _SortAndWriteResponse_default_instance_;
class UpdateCacheRequest;
struct UpdateCacheRequestDefaultTypeInternal;
extern UpdateCacheRequestDefaultTypeInternal _UpdateCacheRequest_default_instance_;
class UpdateCacheResponse;
struct UpdateCacheResponseDefaultTypeInternal;
extern UpdateCacheResponseDefaultTypeInternal _UpdateCacheResponse_default_instance_;
}  // namespace meringue
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace meringue {

// ===================================================================


// -------------------------------------------------------------------

class UpdateCacheResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.UpdateCacheResponse) */ {
 public:
  inline UpdateCacheResponse() : UpdateCacheResponse(nullptr) {}
  ~UpdateCacheResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateCacheResponse(::google::protobuf::internal::ConstantInitialized);

  inline UpdateCacheResponse(const UpdateCacheResponse& from)
      : UpdateCacheResponse(nullptr, from) {}
  UpdateCacheResponse(UpdateCacheResponse&& from) noexcept
    : UpdateCacheResponse() {
    *this = ::std::move(from);
  }

  inline UpdateCacheResponse& operator=(const UpdateCacheResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCacheResponse& operator=(UpdateCacheResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateCacheResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateCacheResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateCacheResponse*>(
               &_UpdateCacheResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(UpdateCacheResponse& a, UpdateCacheResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateCacheResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCacheResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateCacheResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateCacheResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateCacheResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateCacheResponse& from) {
    UpdateCacheResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateCacheResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.UpdateCacheResponse";
  }
  protected:
  explicit UpdateCacheResponse(::google::protobuf::Arena* arena);
  UpdateCacheResponse(::google::protobuf::Arena* arena, const UpdateCacheResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.UpdateCacheResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class UpdateCacheRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.UpdateCacheRequest) */ {
 public:
  inline UpdateCacheRequest() : UpdateCacheRequest(nullptr) {}
  ~UpdateCacheRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateCacheRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpdateCacheRequest(const UpdateCacheRequest& from)
      : UpdateCacheRequest(nullptr, from) {}
  UpdateCacheRequest(UpdateCacheRequest&& from) noexcept
    : UpdateCacheRequest() {
    *this = ::std::move(from);
  }

  inline UpdateCacheRequest& operator=(const UpdateCacheRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCacheRequest& operator=(UpdateCacheRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateCacheRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateCacheRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCacheRequest*>(
               &_UpdateCacheRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(UpdateCacheRequest& a, UpdateCacheRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateCacheRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCacheRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateCacheRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateCacheRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateCacheRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateCacheRequest& from) {
    UpdateCacheRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateCacheRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.UpdateCacheRequest";
  }
  protected:
  explicit UpdateCacheRequest(::google::protobuf::Arena* arena);
  UpdateCacheRequest(::google::protobuf::Arena* arena, const UpdateCacheRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogFileCountFieldNumber = 1,
  };
  // int32 log_file_count = 1;
  void clear_log_file_count() ;
  ::int32_t log_file_count() const;
  void set_log_file_count(::int32_t value);

  private:
  ::int32_t _internal_log_file_count() const;
  void _internal_set_log_file_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.UpdateCacheRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t log_file_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class SortAndWriteResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.SortAndWriteResponse) */ {
 public:
  inline SortAndWriteResponse() : SortAndWriteResponse(nullptr) {}
  ~SortAndWriteResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SortAndWriteResponse(::google::protobuf::internal::ConstantInitialized);

  inline SortAndWriteResponse(const SortAndWriteResponse& from)
      : SortAndWriteResponse(nullptr, from) {}
  SortAndWriteResponse(SortAndWriteResponse&& from) noexcept
    : SortAndWriteResponse() {
    *this = ::std::move(from);
  }

  inline SortAndWriteResponse& operator=(const SortAndWriteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SortAndWriteResponse& operator=(SortAndWriteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SortAndWriteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SortAndWriteResponse* internal_default_instance() {
    return reinterpret_cast<const SortAndWriteResponse*>(
               &_SortAndWriteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SortAndWriteResponse& a, SortAndWriteResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SortAndWriteResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SortAndWriteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SortAndWriteResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SortAndWriteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SortAndWriteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SortAndWriteResponse& from) {
    SortAndWriteResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SortAndWriteResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.SortAndWriteResponse";
  }
  protected:
  explicit SortAndWriteResponse(::google::protobuf::Arena* arena);
  SortAndWriteResponse(::google::protobuf::Arena* arena, const SortAndWriteResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.SortAndWriteResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class SortAndWriteRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.SortAndWriteRequest) */ {
 public:
  inline SortAndWriteRequest() : SortAndWriteRequest(nullptr) {}
  ~SortAndWriteRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SortAndWriteRequest(::google::protobuf::internal::ConstantInitialized);

  inline SortAndWriteRequest(const SortAndWriteRequest& from)
      : SortAndWriteRequest(nullptr, from) {}
  SortAndWriteRequest(SortAndWriteRequest&& from) noexcept
    : SortAndWriteRequest() {
    *this = ::std::move(from);
  }

  inline SortAndWriteRequest& operator=(const SortAndWriteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SortAndWriteRequest& operator=(SortAndWriteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SortAndWriteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SortAndWriteRequest* internal_default_instance() {
    return reinterpret_cast<const SortAndWriteRequest*>(
               &_SortAndWriteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SortAndWriteRequest& a, SortAndWriteRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SortAndWriteRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SortAndWriteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SortAndWriteRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SortAndWriteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SortAndWriteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SortAndWriteRequest& from) {
    SortAndWriteRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SortAndWriteRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.SortAndWriteRequest";
  }
  protected:
  explicit SortAndWriteRequest(::google::protobuf::Arena* arena);
  SortAndWriteRequest(::google::protobuf::Arena* arena, const SortAndWriteRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 2,
    kSizeMbFieldNumber = 1,
  };
  // string filename = 2;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* value);

  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(
      const std::string& value);
  std::string* _internal_mutable_filename();

  public:
  // int64 size_mb = 1;
  void clear_size_mb() ;
  ::int64_t size_mb() const;
  void set_size_mb(::int64_t value);

  private:
  ::int64_t _internal_size_mb() const;
  void _internal_set_size_mb(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.SortAndWriteRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::int64_t size_mb_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class PutSingleMDResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.PutSingleMDResponse) */ {
 public:
  inline PutSingleMDResponse() : PutSingleMDResponse(nullptr) {}
  ~PutSingleMDResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PutSingleMDResponse(::google::protobuf::internal::ConstantInitialized);

  inline PutSingleMDResponse(const PutSingleMDResponse& from)
      : PutSingleMDResponse(nullptr, from) {}
  PutSingleMDResponse(PutSingleMDResponse&& from) noexcept
    : PutSingleMDResponse() {
    *this = ::std::move(from);
  }

  inline PutSingleMDResponse& operator=(const PutSingleMDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutSingleMDResponse& operator=(PutSingleMDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutSingleMDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutSingleMDResponse* internal_default_instance() {
    return reinterpret_cast<const PutSingleMDResponse*>(
               &_PutSingleMDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PutSingleMDResponse& a, PutSingleMDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutSingleMDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutSingleMDResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutSingleMDResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutSingleMDResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PutSingleMDResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PutSingleMDResponse& from) {
    PutSingleMDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PutSingleMDResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.PutSingleMDResponse";
  }
  protected:
  explicit PutSingleMDResponse(::google::protobuf::Arena* arena);
  PutSingleMDResponse(::google::protobuf::Arena* arena, const PutSingleMDResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.PutSingleMDResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class PutSingleMDRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.PutSingleMDRequest) */ {
 public:
  inline PutSingleMDRequest() : PutSingleMDRequest(nullptr) {}
  ~PutSingleMDRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PutSingleMDRequest(::google::protobuf::internal::ConstantInitialized);

  inline PutSingleMDRequest(const PutSingleMDRequest& from)
      : PutSingleMDRequest(nullptr, from) {}
  PutSingleMDRequest(PutSingleMDRequest&& from) noexcept
    : PutSingleMDRequest() {
    *this = ::std::move(from);
  }

  inline PutSingleMDRequest& operator=(const PutSingleMDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutSingleMDRequest& operator=(PutSingleMDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutSingleMDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutSingleMDRequest* internal_default_instance() {
    return reinterpret_cast<const PutSingleMDRequest*>(
               &_PutSingleMDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PutSingleMDRequest& a, PutSingleMDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutSingleMDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutSingleMDRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutSingleMDRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutSingleMDRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PutSingleMDRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PutSingleMDRequest& from) {
    PutSingleMDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PutSingleMDRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.PutSingleMDRequest";
  }
  protected:
  explicit PutSingleMDRequest(::google::protobuf::Arena* arena);
  PutSingleMDRequest(::google::protobuf::Arena* arena, const PutSingleMDRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kBlockMapFieldNumber = 3,
    kSizeFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string block_map = 3;
  void clear_block_map() ;
  const std::string& block_map() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_map(Arg_&& arg, Args_... args);
  std::string* mutable_block_map();
  PROTOBUF_NODISCARD std::string* release_block_map();
  void set_allocated_block_map(std::string* value);

  private:
  const std::string& _internal_block_map() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_map(
      const std::string& value);
  std::string* _internal_mutable_block_map();

  public:
  // int32 size = 2;
  void clear_size() ;
  ::int32_t size() const;
  void set_size(::int32_t value);

  private:
  ::int32_t _internal_size() const;
  void _internal_set_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.PutSingleMDRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr block_map_;
    ::int32_t size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class InitializeResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.InitializeResponse) */ {
 public:
  inline InitializeResponse() : InitializeResponse(nullptr) {}
  ~InitializeResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InitializeResponse(::google::protobuf::internal::ConstantInitialized);

  inline InitializeResponse(const InitializeResponse& from)
      : InitializeResponse(nullptr, from) {}
  InitializeResponse(InitializeResponse&& from) noexcept
    : InitializeResponse() {
    *this = ::std::move(from);
  }

  inline InitializeResponse& operator=(const InitializeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitializeResponse& operator=(InitializeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitializeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitializeResponse* internal_default_instance() {
    return reinterpret_cast<const InitializeResponse*>(
               &_InitializeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InitializeResponse& a, InitializeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(InitializeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitializeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitializeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitializeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitializeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InitializeResponse& from) {
    InitializeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InitializeResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.InitializeResponse";
  }
  protected:
  explicit InitializeResponse(::google::protobuf::Arena* arena);
  InitializeResponse(::google::protobuf::Arena* arena, const InitializeResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsRunningFieldNumber = 1,
  };
  // bool is_running = 1;
  void clear_is_running() ;
  bool is_running() const;
  void set_is_running(bool value);

  private:
  bool _internal_is_running() const;
  void _internal_set_is_running(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.InitializeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool is_running_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class InitializeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.InitializeRequest) */ {
 public:
  inline InitializeRequest() : InitializeRequest(nullptr) {}
  ~InitializeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InitializeRequest(::google::protobuf::internal::ConstantInitialized);

  inline InitializeRequest(const InitializeRequest& from)
      : InitializeRequest(nullptr, from) {}
  InitializeRequest(InitializeRequest&& from) noexcept
    : InitializeRequest() {
    *this = ::std::move(from);
  }

  inline InitializeRequest& operator=(const InitializeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InitializeRequest& operator=(InitializeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InitializeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InitializeRequest* internal_default_instance() {
    return reinterpret_cast<const InitializeRequest*>(
               &_InitializeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InitializeRequest& a, InitializeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InitializeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InitializeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InitializeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InitializeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InitializeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InitializeRequest& from) {
    InitializeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InitializeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.InitializeRequest";
  }
  protected:
  explicit InitializeRequest(::google::protobuf::Arena* arena);
  InitializeRequest(::google::protobuf::Arena* arena, const InitializeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOscBucketNameFieldNumber = 3,
    kLogFilePathFieldNumber = 4,
    kMeringueDbPathFieldNumber = 5,
    kLocalEndpointUrlFieldNumber = 6,
    kLocalRegionFieldNumber = 9,
    kPackingModeFieldNumber = 2,
    kContdFieldNumber = 1,
    kIsOnPremFieldNumber = 8,
    kGcThresholdFieldNumber = 7,
  };
  // string osc_bucket_name = 3;
  void clear_osc_bucket_name() ;
  const std::string& osc_bucket_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_osc_bucket_name(Arg_&& arg, Args_... args);
  std::string* mutable_osc_bucket_name();
  PROTOBUF_NODISCARD std::string* release_osc_bucket_name();
  void set_allocated_osc_bucket_name(std::string* value);

  private:
  const std::string& _internal_osc_bucket_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_osc_bucket_name(
      const std::string& value);
  std::string* _internal_mutable_osc_bucket_name();

  public:
  // string log_file_path = 4;
  void clear_log_file_path() ;
  const std::string& log_file_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log_file_path(Arg_&& arg, Args_... args);
  std::string* mutable_log_file_path();
  PROTOBUF_NODISCARD std::string* release_log_file_path();
  void set_allocated_log_file_path(std::string* value);

  private:
  const std::string& _internal_log_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log_file_path(
      const std::string& value);
  std::string* _internal_mutable_log_file_path();

  public:
  // string meringue_db_path = 5;
  void clear_meringue_db_path() ;
  const std::string& meringue_db_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_meringue_db_path(Arg_&& arg, Args_... args);
  std::string* mutable_meringue_db_path();
  PROTOBUF_NODISCARD std::string* release_meringue_db_path();
  void set_allocated_meringue_db_path(std::string* value);

  private:
  const std::string& _internal_meringue_db_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_meringue_db_path(
      const std::string& value);
  std::string* _internal_mutable_meringue_db_path();

  public:
  // string local_endpoint_url = 6;
  void clear_local_endpoint_url() ;
  const std::string& local_endpoint_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_local_endpoint_url(Arg_&& arg, Args_... args);
  std::string* mutable_local_endpoint_url();
  PROTOBUF_NODISCARD std::string* release_local_endpoint_url();
  void set_allocated_local_endpoint_url(std::string* value);

  private:
  const std::string& _internal_local_endpoint_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_local_endpoint_url(
      const std::string& value);
  std::string* _internal_mutable_local_endpoint_url();

  public:
  // string local_region = 9;
  void clear_local_region() ;
  const std::string& local_region() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_local_region(Arg_&& arg, Args_... args);
  std::string* mutable_local_region();
  PROTOBUF_NODISCARD std::string* release_local_region();
  void set_allocated_local_region(std::string* value);

  private:
  const std::string& _internal_local_region() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_local_region(
      const std::string& value);
  std::string* _internal_mutable_local_region();

  public:
  // int32 packing_mode = 2;
  void clear_packing_mode() ;
  ::int32_t packing_mode() const;
  void set_packing_mode(::int32_t value);

  private:
  ::int32_t _internal_packing_mode() const;
  void _internal_set_packing_mode(::int32_t value);

  public:
  // bool contd = 1;
  void clear_contd() ;
  bool contd() const;
  void set_contd(bool value);

  private:
  bool _internal_contd() const;
  void _internal_set_contd(bool value);

  public:
  // bool is_on_prem = 8;
  void clear_is_on_prem() ;
  bool is_on_prem() const;
  void set_is_on_prem(bool value);

  private:
  bool _internal_is_on_prem() const;
  void _internal_set_is_on_prem(bool value);

  public:
  // double gc_threshold = 7;
  void clear_gc_threshold() ;
  double gc_threshold() const;
  void set_gc_threshold(double value);

  private:
  double _internal_gc_threshold() const;
  void _internal_set_gc_threshold(double value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.InitializeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      117, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr osc_bucket_name_;
    ::google::protobuf::internal::ArenaStringPtr log_file_path_;
    ::google::protobuf::internal::ArenaStringPtr meringue_db_path_;
    ::google::protobuf::internal::ArenaStringPtr local_endpoint_url_;
    ::google::protobuf::internal::ArenaStringPtr local_region_;
    ::int32_t packing_mode_;
    bool contd_;
    bool is_on_prem_;
    double gc_threshold_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class GetSingleMDResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.GetSingleMDResponse) */ {
 public:
  inline GetSingleMDResponse() : GetSingleMDResponse(nullptr) {}
  ~GetSingleMDResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSingleMDResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSingleMDResponse(const GetSingleMDResponse& from)
      : GetSingleMDResponse(nullptr, from) {}
  GetSingleMDResponse(GetSingleMDResponse&& from) noexcept
    : GetSingleMDResponse() {
    *this = ::std::move(from);
  }

  inline GetSingleMDResponse& operator=(const GetSingleMDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSingleMDResponse& operator=(GetSingleMDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSingleMDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSingleMDResponse* internal_default_instance() {
    return reinterpret_cast<const GetSingleMDResponse*>(
               &_GetSingleMDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetSingleMDResponse& a, GetSingleMDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSingleMDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSingleMDResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSingleMDResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSingleMDResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSingleMDResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSingleMDResponse& from) {
    GetSingleMDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSingleMDResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.GetSingleMDResponse";
  }
  protected:
  explicit GetSingleMDResponse(::google::protobuf::Arena* arena);
  GetSingleMDResponse(::google::protobuf::Arena* arena, const GetSingleMDResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlockIdFieldNumber = 4,
    kSizeFieldNumber = 2,
    kExistsFieldNumber = 1,
    kOffsetFieldNumber = 3,
  };
  // string block_id = 4;
  void clear_block_id() ;
  const std::string& block_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_id(Arg_&& arg, Args_... args);
  std::string* mutable_block_id();
  PROTOBUF_NODISCARD std::string* release_block_id();
  void set_allocated_block_id(std::string* value);

  private:
  const std::string& _internal_block_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_id(
      const std::string& value);
  std::string* _internal_mutable_block_id();

  public:
  // int64 size = 2;
  void clear_size() ;
  ::int64_t size() const;
  void set_size(::int64_t value);

  private:
  ::int64_t _internal_size() const;
  void _internal_set_size(::int64_t value);

  public:
  // bool exists = 1;
  void clear_exists() ;
  bool exists() const;
  void set_exists(bool value);

  private:
  bool _internal_exists() const;
  void _internal_set_exists(bool value);

  public:
  // int32 offset = 3;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.GetSingleMDResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr block_id_;
    ::int64_t size_;
    bool exists_;
    ::int32_t offset_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class GetSingleMDRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.GetSingleMDRequest) */ {
 public:
  inline GetSingleMDRequest() : GetSingleMDRequest(nullptr) {}
  ~GetSingleMDRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSingleMDRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetSingleMDRequest(const GetSingleMDRequest& from)
      : GetSingleMDRequest(nullptr, from) {}
  GetSingleMDRequest(GetSingleMDRequest&& from) noexcept
    : GetSingleMDRequest() {
    *this = ::std::move(from);
  }

  inline GetSingleMDRequest& operator=(const GetSingleMDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSingleMDRequest& operator=(GetSingleMDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSingleMDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSingleMDRequest* internal_default_instance() {
    return reinterpret_cast<const GetSingleMDRequest*>(
               &_GetSingleMDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetSingleMDRequest& a, GetSingleMDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSingleMDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSingleMDRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSingleMDRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSingleMDRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSingleMDRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSingleMDRequest& from) {
    GetSingleMDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSingleMDRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.GetSingleMDRequest";
  }
  protected:
  explicit GetSingleMDRequest(::google::protobuf::Arena* arena);
  GetSingleMDRequest(::google::protobuf::Arena* arena, const GetSingleMDRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // @@protoc_insertion_point(class_scope:meringue.GetSingleMDRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class GCResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.GCResponse) */ {
 public:
  inline GCResponse() : GCResponse(nullptr) {}
  ~GCResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GCResponse(::google::protobuf::internal::ConstantInitialized);

  inline GCResponse(const GCResponse& from)
      : GCResponse(nullptr, from) {}
  GCResponse(GCResponse&& from) noexcept
    : GCResponse() {
    *this = ::std::move(from);
  }

  inline GCResponse& operator=(const GCResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GCResponse& operator=(GCResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GCResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GCResponse* internal_default_instance() {
    return reinterpret_cast<const GCResponse*>(
               &_GCResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GCResponse& a, GCResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GCResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GCResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GCResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GCResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GCResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GCResponse& from) {
    GCResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GCResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.GCResponse";
  }
  protected:
  explicit GCResponse(::google::protobuf::Arena* arena);
  GCResponse(::google::protobuf::Arena* arena, const GCResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrvTotalDataSizeBytesFieldNumber = 2,
    kSuccessFieldNumber = 1,
    kOscGcGetCountFieldNumber = 4,
    kNewTotalDataSizeBytesFieldNumber = 3,
    kOscGcPutCountFieldNumber = 5,
  };
  // int64 prv_total_data_size_bytes = 2;
  void clear_prv_total_data_size_bytes() ;
  ::int64_t prv_total_data_size_bytes() const;
  void set_prv_total_data_size_bytes(::int64_t value);

  private:
  ::int64_t _internal_prv_total_data_size_bytes() const;
  void _internal_set_prv_total_data_size_bytes(::int64_t value);

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // int32 osc_gc_get_count = 4;
  void clear_osc_gc_get_count() ;
  ::int32_t osc_gc_get_count() const;
  void set_osc_gc_get_count(::int32_t value);

  private:
  ::int32_t _internal_osc_gc_get_count() const;
  void _internal_set_osc_gc_get_count(::int32_t value);

  public:
  // int64 new_total_data_size_bytes = 3;
  void clear_new_total_data_size_bytes() ;
  ::int64_t new_total_data_size_bytes() const;
  void set_new_total_data_size_bytes(::int64_t value);

  private:
  ::int64_t _internal_new_total_data_size_bytes() const;
  void _internal_set_new_total_data_size_bytes(::int64_t value);

  public:
  // int32 osc_gc_put_count = 5;
  void clear_osc_gc_put_count() ;
  ::int32_t osc_gc_put_count() const;
  void set_osc_gc_put_count(::int32_t value);

  private:
  ::int32_t _internal_osc_gc_put_count() const;
  void _internal_set_osc_gc_put_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.GCResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t prv_total_data_size_bytes_;
    bool success_;
    ::int32_t osc_gc_get_count_;
    ::int64_t new_total_data_size_bytes_;
    ::int32_t osc_gc_put_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class GCRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:meringue.GCRequest) */ {
 public:
  inline GCRequest() : GCRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GCRequest(::google::protobuf::internal::ConstantInitialized);

  inline GCRequest(const GCRequest& from)
      : GCRequest(nullptr, from) {}
  GCRequest(GCRequest&& from) noexcept
    : GCRequest() {
    *this = ::std::move(from);
  }

  inline GCRequest& operator=(const GCRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GCRequest& operator=(GCRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GCRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GCRequest* internal_default_instance() {
    return reinterpret_cast<const GCRequest*>(
               &_GCRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GCRequest& a, GCRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GCRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GCRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GCRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GCRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GCRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GCRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.GCRequest";
  }
  protected:
  explicit GCRequest(::google::protobuf::Arena* arena);
  GCRequest(::google::protobuf::Arena* arena, const GCRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:meringue.GCRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class EvictionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.EvictionResponse) */ {
 public:
  inline EvictionResponse() : EvictionResponse(nullptr) {}
  ~EvictionResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EvictionResponse(::google::protobuf::internal::ConstantInitialized);

  inline EvictionResponse(const EvictionResponse& from)
      : EvictionResponse(nullptr, from) {}
  EvictionResponse(EvictionResponse&& from) noexcept
    : EvictionResponse() {
    *this = ::std::move(from);
  }

  inline EvictionResponse& operator=(const EvictionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvictionResponse& operator=(EvictionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvictionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvictionResponse* internal_default_instance() {
    return reinterpret_cast<const EvictionResponse*>(
               &_EvictionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(EvictionResponse& a, EvictionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(EvictionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvictionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvictionResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EvictionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EvictionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EvictionResponse& from) {
    EvictionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EvictionResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.EvictionResponse";
  }
  protected:
  explicit EvictionResponse(::google::protobuf::Arena* arena);
  EvictionResponse(::google::protobuf::Arena* arena, const EvictionResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrvOscSizeBytesFieldNumber = 2,
    kNewOscSizeBytesFieldNumber = 3,
    kSuccessFieldNumber = 1,
  };
  // int64 prv_osc_size_bytes = 2;
  void clear_prv_osc_size_bytes() ;
  ::int64_t prv_osc_size_bytes() const;
  void set_prv_osc_size_bytes(::int64_t value);

  private:
  ::int64_t _internal_prv_osc_size_bytes() const;
  void _internal_set_prv_osc_size_bytes(::int64_t value);

  public:
  // int64 new_osc_size_bytes = 3;
  void clear_new_osc_size_bytes() ;
  ::int64_t new_osc_size_bytes() const;
  void set_new_osc_size_bytes(::int64_t value);

  private:
  ::int64_t _internal_new_osc_size_bytes() const;
  void _internal_set_new_osc_size_bytes(::int64_t value);

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.EvictionResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t prv_osc_size_bytes_;
    ::int64_t new_osc_size_bytes_;
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class EvictionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.EvictionRequest) */ {
 public:
  inline EvictionRequest() : EvictionRequest(nullptr) {}
  ~EvictionRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EvictionRequest(::google::protobuf::internal::ConstantInitialized);

  inline EvictionRequest(const EvictionRequest& from)
      : EvictionRequest(nullptr, from) {}
  EvictionRequest(EvictionRequest&& from) noexcept
    : EvictionRequest() {
    *this = ::std::move(from);
  }

  inline EvictionRequest& operator=(const EvictionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvictionRequest& operator=(EvictionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvictionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvictionRequest* internal_default_instance() {
    return reinterpret_cast<const EvictionRequest*>(
               &_EvictionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(EvictionRequest& a, EvictionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EvictionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvictionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvictionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EvictionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EvictionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EvictionRequest& from) {
    EvictionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EvictionRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.EvictionRequest";
  }
  protected:
  explicit EvictionRequest(::google::protobuf::Arena* arena);
  EvictionRequest(::google::protobuf::Arena* arena, const EvictionRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewSizeMbFieldNumber = 1,
  };
  // int64 new_size_mb = 1;
  void clear_new_size_mb() ;
  ::int64_t new_size_mb() const;
  void set_new_size_mb(::int64_t value);

  private:
  ::int64_t _internal_new_size_mb() const;
  void _internal_set_new_size_mb(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.EvictionRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t new_size_mb_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class DeleteSingleMDResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.DeleteSingleMDResponse) */ {
 public:
  inline DeleteSingleMDResponse() : DeleteSingleMDResponse(nullptr) {}
  ~DeleteSingleMDResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSingleMDResponse(::google::protobuf::internal::ConstantInitialized);

  inline DeleteSingleMDResponse(const DeleteSingleMDResponse& from)
      : DeleteSingleMDResponse(nullptr, from) {}
  DeleteSingleMDResponse(DeleteSingleMDResponse&& from) noexcept
    : DeleteSingleMDResponse() {
    *this = ::std::move(from);
  }

  inline DeleteSingleMDResponse& operator=(const DeleteSingleMDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSingleMDResponse& operator=(DeleteSingleMDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSingleMDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteSingleMDResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteSingleMDResponse*>(
               &_DeleteSingleMDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DeleteSingleMDResponse& a, DeleteSingleMDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteSingleMDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSingleMDResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSingleMDResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteSingleMDResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteSingleMDResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteSingleMDResponse& from) {
    DeleteSingleMDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteSingleMDResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.DeleteSingleMDResponse";
  }
  protected:
  explicit DeleteSingleMDResponse(::google::protobuf::Arena* arena);
  DeleteSingleMDResponse(::google::protobuf::Arena* arena, const DeleteSingleMDResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:meringue.DeleteSingleMDResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};// -------------------------------------------------------------------

class DeleteSingleMDRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:meringue.DeleteSingleMDRequest) */ {
 public:
  inline DeleteSingleMDRequest() : DeleteSingleMDRequest(nullptr) {}
  ~DeleteSingleMDRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSingleMDRequest(::google::protobuf::internal::ConstantInitialized);

  inline DeleteSingleMDRequest(const DeleteSingleMDRequest& from)
      : DeleteSingleMDRequest(nullptr, from) {}
  DeleteSingleMDRequest(DeleteSingleMDRequest&& from) noexcept
    : DeleteSingleMDRequest() {
    *this = ::std::move(from);
  }

  inline DeleteSingleMDRequest& operator=(const DeleteSingleMDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSingleMDRequest& operator=(DeleteSingleMDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSingleMDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteSingleMDRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSingleMDRequest*>(
               &_DeleteSingleMDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeleteSingleMDRequest& a, DeleteSingleMDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteSingleMDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSingleMDRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSingleMDRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteSingleMDRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteSingleMDRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteSingleMDRequest& from) {
    DeleteSingleMDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteSingleMDRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "meringue.DeleteSingleMDRequest";
  }
  protected:
  explicit DeleteSingleMDRequest(::google::protobuf::Arena* arena);
  DeleteSingleMDRequest(::google::protobuf::Arena* arena, const DeleteSingleMDRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // @@protoc_insertion_point(class_scope:meringue.DeleteSingleMDRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      42, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_meringue_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InitializeRequest

// bool contd = 1;
inline void InitializeRequest::clear_contd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.contd_ = false;
}
inline bool InitializeRequest::contd() const {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.contd)
  return _internal_contd();
}
inline void InitializeRequest::set_contd(bool value) {
  _internal_set_contd(value);
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.contd)
}
inline bool InitializeRequest::_internal_contd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.contd_;
}
inline void InitializeRequest::_internal_set_contd(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.contd_ = value;
}

// int32 packing_mode = 2;
inline void InitializeRequest::clear_packing_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.packing_mode_ = 0;
}
inline ::int32_t InitializeRequest::packing_mode() const {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.packing_mode)
  return _internal_packing_mode();
}
inline void InitializeRequest::set_packing_mode(::int32_t value) {
  _internal_set_packing_mode(value);
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.packing_mode)
}
inline ::int32_t InitializeRequest::_internal_packing_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.packing_mode_;
}
inline void InitializeRequest::_internal_set_packing_mode(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.packing_mode_ = value;
}

// string osc_bucket_name = 3;
inline void InitializeRequest::clear_osc_bucket_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osc_bucket_name_.ClearToEmpty();
}
inline const std::string& InitializeRequest::osc_bucket_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.osc_bucket_name)
  return _internal_osc_bucket_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InitializeRequest::set_osc_bucket_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osc_bucket_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.osc_bucket_name)
}
inline std::string* InitializeRequest::mutable_osc_bucket_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_osc_bucket_name();
  // @@protoc_insertion_point(field_mutable:meringue.InitializeRequest.osc_bucket_name)
  return _s;
}
inline const std::string& InitializeRequest::_internal_osc_bucket_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osc_bucket_name_.Get();
}
inline void InitializeRequest::_internal_set_osc_bucket_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osc_bucket_name_.Set(value, GetArena());
}
inline std::string* InitializeRequest::_internal_mutable_osc_bucket_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.osc_bucket_name_.Mutable( GetArena());
}
inline std::string* InitializeRequest::release_osc_bucket_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.InitializeRequest.osc_bucket_name)
  return _impl_.osc_bucket_name_.Release();
}
inline void InitializeRequest::set_allocated_osc_bucket_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osc_bucket_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.osc_bucket_name_.IsDefault()) {
          _impl_.osc_bucket_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.InitializeRequest.osc_bucket_name)
}

// string log_file_path = 4;
inline void InitializeRequest::clear_log_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.log_file_path_.ClearToEmpty();
}
inline const std::string& InitializeRequest::log_file_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.log_file_path)
  return _internal_log_file_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InitializeRequest::set_log_file_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.log_file_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.log_file_path)
}
inline std::string* InitializeRequest::mutable_log_file_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_log_file_path();
  // @@protoc_insertion_point(field_mutable:meringue.InitializeRequest.log_file_path)
  return _s;
}
inline const std::string& InitializeRequest::_internal_log_file_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.log_file_path_.Get();
}
inline void InitializeRequest::_internal_set_log_file_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.log_file_path_.Set(value, GetArena());
}
inline std::string* InitializeRequest::_internal_mutable_log_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.log_file_path_.Mutable( GetArena());
}
inline std::string* InitializeRequest::release_log_file_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.InitializeRequest.log_file_path)
  return _impl_.log_file_path_.Release();
}
inline void InitializeRequest::set_allocated_log_file_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.log_file_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.log_file_path_.IsDefault()) {
          _impl_.log_file_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.InitializeRequest.log_file_path)
}

// string meringue_db_path = 5;
inline void InitializeRequest::clear_meringue_db_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.meringue_db_path_.ClearToEmpty();
}
inline const std::string& InitializeRequest::meringue_db_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.meringue_db_path)
  return _internal_meringue_db_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InitializeRequest::set_meringue_db_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.meringue_db_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.meringue_db_path)
}
inline std::string* InitializeRequest::mutable_meringue_db_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_meringue_db_path();
  // @@protoc_insertion_point(field_mutable:meringue.InitializeRequest.meringue_db_path)
  return _s;
}
inline const std::string& InitializeRequest::_internal_meringue_db_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.meringue_db_path_.Get();
}
inline void InitializeRequest::_internal_set_meringue_db_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.meringue_db_path_.Set(value, GetArena());
}
inline std::string* InitializeRequest::_internal_mutable_meringue_db_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.meringue_db_path_.Mutable( GetArena());
}
inline std::string* InitializeRequest::release_meringue_db_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.InitializeRequest.meringue_db_path)
  return _impl_.meringue_db_path_.Release();
}
inline void InitializeRequest::set_allocated_meringue_db_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.meringue_db_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.meringue_db_path_.IsDefault()) {
          _impl_.meringue_db_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.InitializeRequest.meringue_db_path)
}

// string local_endpoint_url = 6;
inline void InitializeRequest::clear_local_endpoint_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.local_endpoint_url_.ClearToEmpty();
}
inline const std::string& InitializeRequest::local_endpoint_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.local_endpoint_url)
  return _internal_local_endpoint_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InitializeRequest::set_local_endpoint_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.local_endpoint_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.local_endpoint_url)
}
inline std::string* InitializeRequest::mutable_local_endpoint_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_local_endpoint_url();
  // @@protoc_insertion_point(field_mutable:meringue.InitializeRequest.local_endpoint_url)
  return _s;
}
inline const std::string& InitializeRequest::_internal_local_endpoint_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.local_endpoint_url_.Get();
}
inline void InitializeRequest::_internal_set_local_endpoint_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.local_endpoint_url_.Set(value, GetArena());
}
inline std::string* InitializeRequest::_internal_mutable_local_endpoint_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.local_endpoint_url_.Mutable( GetArena());
}
inline std::string* InitializeRequest::release_local_endpoint_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.InitializeRequest.local_endpoint_url)
  return _impl_.local_endpoint_url_.Release();
}
inline void InitializeRequest::set_allocated_local_endpoint_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.local_endpoint_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.local_endpoint_url_.IsDefault()) {
          _impl_.local_endpoint_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.InitializeRequest.local_endpoint_url)
}

// double gc_threshold = 7;
inline void InitializeRequest::clear_gc_threshold() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gc_threshold_ = 0;
}
inline double InitializeRequest::gc_threshold() const {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.gc_threshold)
  return _internal_gc_threshold();
}
inline void InitializeRequest::set_gc_threshold(double value) {
  _internal_set_gc_threshold(value);
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.gc_threshold)
}
inline double InitializeRequest::_internal_gc_threshold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gc_threshold_;
}
inline void InitializeRequest::_internal_set_gc_threshold(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gc_threshold_ = value;
}

// bool is_on_prem = 8;
inline void InitializeRequest::clear_is_on_prem() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_on_prem_ = false;
}
inline bool InitializeRequest::is_on_prem() const {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.is_on_prem)
  return _internal_is_on_prem();
}
inline void InitializeRequest::set_is_on_prem(bool value) {
  _internal_set_is_on_prem(value);
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.is_on_prem)
}
inline bool InitializeRequest::_internal_is_on_prem() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_on_prem_;
}
inline void InitializeRequest::_internal_set_is_on_prem(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_on_prem_ = value;
}

// string local_region = 9;
inline void InitializeRequest::clear_local_region() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.local_region_.ClearToEmpty();
}
inline const std::string& InitializeRequest::local_region() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.InitializeRequest.local_region)
  return _internal_local_region();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InitializeRequest::set_local_region(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.local_region_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.InitializeRequest.local_region)
}
inline std::string* InitializeRequest::mutable_local_region() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_local_region();
  // @@protoc_insertion_point(field_mutable:meringue.InitializeRequest.local_region)
  return _s;
}
inline const std::string& InitializeRequest::_internal_local_region() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.local_region_.Get();
}
inline void InitializeRequest::_internal_set_local_region(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.local_region_.Set(value, GetArena());
}
inline std::string* InitializeRequest::_internal_mutable_local_region() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.local_region_.Mutable( GetArena());
}
inline std::string* InitializeRequest::release_local_region() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.InitializeRequest.local_region)
  return _impl_.local_region_.Release();
}
inline void InitializeRequest::set_allocated_local_region(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.local_region_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.local_region_.IsDefault()) {
          _impl_.local_region_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.InitializeRequest.local_region)
}

// -------------------------------------------------------------------

// InitializeResponse

// bool is_running = 1;
inline void InitializeResponse::clear_is_running() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_running_ = false;
}
inline bool InitializeResponse::is_running() const {
  // @@protoc_insertion_point(field_get:meringue.InitializeResponse.is_running)
  return _internal_is_running();
}
inline void InitializeResponse::set_is_running(bool value) {
  _internal_set_is_running(value);
  // @@protoc_insertion_point(field_set:meringue.InitializeResponse.is_running)
}
inline bool InitializeResponse::_internal_is_running() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_running_;
}
inline void InitializeResponse::_internal_set_is_running(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_running_ = value;
}

// -------------------------------------------------------------------

// PutSingleMDRequest

// string key = 1;
inline void PutSingleMDRequest::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& PutSingleMDRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.PutSingleMDRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PutSingleMDRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.PutSingleMDRequest.key)
}
inline std::string* PutSingleMDRequest::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:meringue.PutSingleMDRequest.key)
  return _s;
}
inline const std::string& PutSingleMDRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void PutSingleMDRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* PutSingleMDRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* PutSingleMDRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.PutSingleMDRequest.key)
  return _impl_.key_.Release();
}
inline void PutSingleMDRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.PutSingleMDRequest.key)
}

// int32 size = 2;
inline void PutSingleMDRequest::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = 0;
}
inline ::int32_t PutSingleMDRequest::size() const {
  // @@protoc_insertion_point(field_get:meringue.PutSingleMDRequest.size)
  return _internal_size();
}
inline void PutSingleMDRequest::set_size(::int32_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:meringue.PutSingleMDRequest.size)
}
inline ::int32_t PutSingleMDRequest::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void PutSingleMDRequest::_internal_set_size(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// string block_map = 3;
inline void PutSingleMDRequest::clear_block_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.block_map_.ClearToEmpty();
}
inline const std::string& PutSingleMDRequest::block_map() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.PutSingleMDRequest.block_map)
  return _internal_block_map();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PutSingleMDRequest::set_block_map(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.block_map_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.PutSingleMDRequest.block_map)
}
inline std::string* PutSingleMDRequest::mutable_block_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_map();
  // @@protoc_insertion_point(field_mutable:meringue.PutSingleMDRequest.block_map)
  return _s;
}
inline const std::string& PutSingleMDRequest::_internal_block_map() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.block_map_.Get();
}
inline void PutSingleMDRequest::_internal_set_block_map(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.block_map_.Set(value, GetArena());
}
inline std::string* PutSingleMDRequest::_internal_mutable_block_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.block_map_.Mutable( GetArena());
}
inline std::string* PutSingleMDRequest::release_block_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.PutSingleMDRequest.block_map)
  return _impl_.block_map_.Release();
}
inline void PutSingleMDRequest::set_allocated_block_map(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.block_map_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_map_.IsDefault()) {
          _impl_.block_map_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.PutSingleMDRequest.block_map)
}

// -------------------------------------------------------------------

// PutSingleMDResponse

// bool success = 1;
inline void PutSingleMDResponse::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool PutSingleMDResponse::success() const {
  // @@protoc_insertion_point(field_get:meringue.PutSingleMDResponse.success)
  return _internal_success();
}
inline void PutSingleMDResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:meringue.PutSingleMDResponse.success)
}
inline bool PutSingleMDResponse::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void PutSingleMDResponse::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// GetSingleMDRequest

// string key = 1;
inline void GetSingleMDRequest::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& GetSingleMDRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.GetSingleMDRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSingleMDRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.GetSingleMDRequest.key)
}
inline std::string* GetSingleMDRequest::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:meringue.GetSingleMDRequest.key)
  return _s;
}
inline const std::string& GetSingleMDRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void GetSingleMDRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* GetSingleMDRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* GetSingleMDRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.GetSingleMDRequest.key)
  return _impl_.key_.Release();
}
inline void GetSingleMDRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.GetSingleMDRequest.key)
}

// -------------------------------------------------------------------

// GetSingleMDResponse

// bool exists = 1;
inline void GetSingleMDResponse::clear_exists() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.exists_ = false;
}
inline bool GetSingleMDResponse::exists() const {
  // @@protoc_insertion_point(field_get:meringue.GetSingleMDResponse.exists)
  return _internal_exists();
}
inline void GetSingleMDResponse::set_exists(bool value) {
  _internal_set_exists(value);
  // @@protoc_insertion_point(field_set:meringue.GetSingleMDResponse.exists)
}
inline bool GetSingleMDResponse::_internal_exists() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.exists_;
}
inline void GetSingleMDResponse::_internal_set_exists(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.exists_ = value;
}

// int64 size = 2;
inline void GetSingleMDResponse::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::int64_t{0};
}
inline ::int64_t GetSingleMDResponse::size() const {
  // @@protoc_insertion_point(field_get:meringue.GetSingleMDResponse.size)
  return _internal_size();
}
inline void GetSingleMDResponse::set_size(::int64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:meringue.GetSingleMDResponse.size)
}
inline ::int64_t GetSingleMDResponse::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void GetSingleMDResponse::_internal_set_size(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// int32 offset = 3;
inline void GetSingleMDResponse::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.offset_ = 0;
}
inline ::int32_t GetSingleMDResponse::offset() const {
  // @@protoc_insertion_point(field_get:meringue.GetSingleMDResponse.offset)
  return _internal_offset();
}
inline void GetSingleMDResponse::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:meringue.GetSingleMDResponse.offset)
}
inline ::int32_t GetSingleMDResponse::_internal_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_;
}
inline void GetSingleMDResponse::_internal_set_offset(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_ = value;
}

// string block_id = 4;
inline void GetSingleMDResponse::clear_block_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.block_id_.ClearToEmpty();
}
inline const std::string& GetSingleMDResponse::block_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.GetSingleMDResponse.block_id)
  return _internal_block_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSingleMDResponse::set_block_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.block_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.GetSingleMDResponse.block_id)
}
inline std::string* GetSingleMDResponse::mutable_block_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_id();
  // @@protoc_insertion_point(field_mutable:meringue.GetSingleMDResponse.block_id)
  return _s;
}
inline const std::string& GetSingleMDResponse::_internal_block_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.block_id_.Get();
}
inline void GetSingleMDResponse::_internal_set_block_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.block_id_.Set(value, GetArena());
}
inline std::string* GetSingleMDResponse::_internal_mutable_block_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.block_id_.Mutable( GetArena());
}
inline std::string* GetSingleMDResponse::release_block_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.GetSingleMDResponse.block_id)
  return _impl_.block_id_.Release();
}
inline void GetSingleMDResponse::set_allocated_block_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.block_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_id_.IsDefault()) {
          _impl_.block_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.GetSingleMDResponse.block_id)
}

// -------------------------------------------------------------------

// DeleteSingleMDRequest

// string key = 1;
inline void DeleteSingleMDRequest::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& DeleteSingleMDRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.DeleteSingleMDRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteSingleMDRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.DeleteSingleMDRequest.key)
}
inline std::string* DeleteSingleMDRequest::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:meringue.DeleteSingleMDRequest.key)
  return _s;
}
inline const std::string& DeleteSingleMDRequest::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void DeleteSingleMDRequest::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* DeleteSingleMDRequest::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* DeleteSingleMDRequest::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.DeleteSingleMDRequest.key)
  return _impl_.key_.Release();
}
inline void DeleteSingleMDRequest::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.DeleteSingleMDRequest.key)
}

// -------------------------------------------------------------------

// DeleteSingleMDResponse

// bool success = 1;
inline void DeleteSingleMDResponse::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool DeleteSingleMDResponse::success() const {
  // @@protoc_insertion_point(field_get:meringue.DeleteSingleMDResponse.success)
  return _internal_success();
}
inline void DeleteSingleMDResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:meringue.DeleteSingleMDResponse.success)
}
inline bool DeleteSingleMDResponse::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void DeleteSingleMDResponse::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// UpdateCacheRequest

// int32 log_file_count = 1;
inline void UpdateCacheRequest::clear_log_file_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.log_file_count_ = 0;
}
inline ::int32_t UpdateCacheRequest::log_file_count() const {
  // @@protoc_insertion_point(field_get:meringue.UpdateCacheRequest.log_file_count)
  return _internal_log_file_count();
}
inline void UpdateCacheRequest::set_log_file_count(::int32_t value) {
  _internal_set_log_file_count(value);
  // @@protoc_insertion_point(field_set:meringue.UpdateCacheRequest.log_file_count)
}
inline ::int32_t UpdateCacheRequest::_internal_log_file_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.log_file_count_;
}
inline void UpdateCacheRequest::_internal_set_log_file_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.log_file_count_ = value;
}

// -------------------------------------------------------------------

// UpdateCacheResponse

// bool success = 1;
inline void UpdateCacheResponse::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool UpdateCacheResponse::success() const {
  // @@protoc_insertion_point(field_get:meringue.UpdateCacheResponse.success)
  return _internal_success();
}
inline void UpdateCacheResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:meringue.UpdateCacheResponse.success)
}
inline bool UpdateCacheResponse::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void UpdateCacheResponse::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// EvictionRequest

// int64 new_size_mb = 1;
inline void EvictionRequest::clear_new_size_mb() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.new_size_mb_ = ::int64_t{0};
}
inline ::int64_t EvictionRequest::new_size_mb() const {
  // @@protoc_insertion_point(field_get:meringue.EvictionRequest.new_size_mb)
  return _internal_new_size_mb();
}
inline void EvictionRequest::set_new_size_mb(::int64_t value) {
  _internal_set_new_size_mb(value);
  // @@protoc_insertion_point(field_set:meringue.EvictionRequest.new_size_mb)
}
inline ::int64_t EvictionRequest::_internal_new_size_mb() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.new_size_mb_;
}
inline void EvictionRequest::_internal_set_new_size_mb(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_size_mb_ = value;
}

// -------------------------------------------------------------------

// EvictionResponse

// bool success = 1;
inline void EvictionResponse::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool EvictionResponse::success() const {
  // @@protoc_insertion_point(field_get:meringue.EvictionResponse.success)
  return _internal_success();
}
inline void EvictionResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:meringue.EvictionResponse.success)
}
inline bool EvictionResponse::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void EvictionResponse::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.success_ = value;
}

// int64 prv_osc_size_bytes = 2;
inline void EvictionResponse::clear_prv_osc_size_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prv_osc_size_bytes_ = ::int64_t{0};
}
inline ::int64_t EvictionResponse::prv_osc_size_bytes() const {
  // @@protoc_insertion_point(field_get:meringue.EvictionResponse.prv_osc_size_bytes)
  return _internal_prv_osc_size_bytes();
}
inline void EvictionResponse::set_prv_osc_size_bytes(::int64_t value) {
  _internal_set_prv_osc_size_bytes(value);
  // @@protoc_insertion_point(field_set:meringue.EvictionResponse.prv_osc_size_bytes)
}
inline ::int64_t EvictionResponse::_internal_prv_osc_size_bytes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prv_osc_size_bytes_;
}
inline void EvictionResponse::_internal_set_prv_osc_size_bytes(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prv_osc_size_bytes_ = value;
}

// int64 new_osc_size_bytes = 3;
inline void EvictionResponse::clear_new_osc_size_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.new_osc_size_bytes_ = ::int64_t{0};
}
inline ::int64_t EvictionResponse::new_osc_size_bytes() const {
  // @@protoc_insertion_point(field_get:meringue.EvictionResponse.new_osc_size_bytes)
  return _internal_new_osc_size_bytes();
}
inline void EvictionResponse::set_new_osc_size_bytes(::int64_t value) {
  _internal_set_new_osc_size_bytes(value);
  // @@protoc_insertion_point(field_set:meringue.EvictionResponse.new_osc_size_bytes)
}
inline ::int64_t EvictionResponse::_internal_new_osc_size_bytes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.new_osc_size_bytes_;
}
inline void EvictionResponse::_internal_set_new_osc_size_bytes(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_osc_size_bytes_ = value;
}

// -------------------------------------------------------------------

// GCRequest

// -------------------------------------------------------------------

// GCResponse

// bool success = 1;
inline void GCResponse::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool GCResponse::success() const {
  // @@protoc_insertion_point(field_get:meringue.GCResponse.success)
  return _internal_success();
}
inline void GCResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:meringue.GCResponse.success)
}
inline bool GCResponse::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void GCResponse::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.success_ = value;
}

// int64 prv_total_data_size_bytes = 2;
inline void GCResponse::clear_prv_total_data_size_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prv_total_data_size_bytes_ = ::int64_t{0};
}
inline ::int64_t GCResponse::prv_total_data_size_bytes() const {
  // @@protoc_insertion_point(field_get:meringue.GCResponse.prv_total_data_size_bytes)
  return _internal_prv_total_data_size_bytes();
}
inline void GCResponse::set_prv_total_data_size_bytes(::int64_t value) {
  _internal_set_prv_total_data_size_bytes(value);
  // @@protoc_insertion_point(field_set:meringue.GCResponse.prv_total_data_size_bytes)
}
inline ::int64_t GCResponse::_internal_prv_total_data_size_bytes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prv_total_data_size_bytes_;
}
inline void GCResponse::_internal_set_prv_total_data_size_bytes(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prv_total_data_size_bytes_ = value;
}

// int64 new_total_data_size_bytes = 3;
inline void GCResponse::clear_new_total_data_size_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.new_total_data_size_bytes_ = ::int64_t{0};
}
inline ::int64_t GCResponse::new_total_data_size_bytes() const {
  // @@protoc_insertion_point(field_get:meringue.GCResponse.new_total_data_size_bytes)
  return _internal_new_total_data_size_bytes();
}
inline void GCResponse::set_new_total_data_size_bytes(::int64_t value) {
  _internal_set_new_total_data_size_bytes(value);
  // @@protoc_insertion_point(field_set:meringue.GCResponse.new_total_data_size_bytes)
}
inline ::int64_t GCResponse::_internal_new_total_data_size_bytes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.new_total_data_size_bytes_;
}
inline void GCResponse::_internal_set_new_total_data_size_bytes(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_total_data_size_bytes_ = value;
}

// int32 osc_gc_get_count = 4;
inline void GCResponse::clear_osc_gc_get_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osc_gc_get_count_ = 0;
}
inline ::int32_t GCResponse::osc_gc_get_count() const {
  // @@protoc_insertion_point(field_get:meringue.GCResponse.osc_gc_get_count)
  return _internal_osc_gc_get_count();
}
inline void GCResponse::set_osc_gc_get_count(::int32_t value) {
  _internal_set_osc_gc_get_count(value);
  // @@protoc_insertion_point(field_set:meringue.GCResponse.osc_gc_get_count)
}
inline ::int32_t GCResponse::_internal_osc_gc_get_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osc_gc_get_count_;
}
inline void GCResponse::_internal_set_osc_gc_get_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osc_gc_get_count_ = value;
}

// int32 osc_gc_put_count = 5;
inline void GCResponse::clear_osc_gc_put_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.osc_gc_put_count_ = 0;
}
inline ::int32_t GCResponse::osc_gc_put_count() const {
  // @@protoc_insertion_point(field_get:meringue.GCResponse.osc_gc_put_count)
  return _internal_osc_gc_put_count();
}
inline void GCResponse::set_osc_gc_put_count(::int32_t value) {
  _internal_set_osc_gc_put_count(value);
  // @@protoc_insertion_point(field_set:meringue.GCResponse.osc_gc_put_count)
}
inline ::int32_t GCResponse::_internal_osc_gc_put_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.osc_gc_put_count_;
}
inline void GCResponse::_internal_set_osc_gc_put_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.osc_gc_put_count_ = value;
}

// -------------------------------------------------------------------

// SortAndWriteRequest

// int64 size_mb = 1;
inline void SortAndWriteRequest::clear_size_mb() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_mb_ = ::int64_t{0};
}
inline ::int64_t SortAndWriteRequest::size_mb() const {
  // @@protoc_insertion_point(field_get:meringue.SortAndWriteRequest.size_mb)
  return _internal_size_mb();
}
inline void SortAndWriteRequest::set_size_mb(::int64_t value) {
  _internal_set_size_mb(value);
  // @@protoc_insertion_point(field_set:meringue.SortAndWriteRequest.size_mb)
}
inline ::int64_t SortAndWriteRequest::_internal_size_mb() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_mb_;
}
inline void SortAndWriteRequest::_internal_set_size_mb(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_mb_ = value;
}

// string filename = 2;
inline void SortAndWriteRequest::clear_filename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.filename_.ClearToEmpty();
}
inline const std::string& SortAndWriteRequest::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:meringue.SortAndWriteRequest.filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SortAndWriteRequest::set_filename(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:meringue.SortAndWriteRequest.filename)
}
inline std::string* SortAndWriteRequest::mutable_filename() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:meringue.SortAndWriteRequest.filename)
  return _s;
}
inline const std::string& SortAndWriteRequest::_internal_filename() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.filename_.Get();
}
inline void SortAndWriteRequest::_internal_set_filename(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.filename_.Set(value, GetArena());
}
inline std::string* SortAndWriteRequest::_internal_mutable_filename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.filename_.Mutable( GetArena());
}
inline std::string* SortAndWriteRequest::release_filename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:meringue.SortAndWriteRequest.filename)
  return _impl_.filename_.Release();
}
inline void SortAndWriteRequest::set_allocated_filename(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.filename_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filename_.IsDefault()) {
          _impl_.filename_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:meringue.SortAndWriteRequest.filename)
}

// -------------------------------------------------------------------

// SortAndWriteResponse

// bool success = 1;
inline void SortAndWriteResponse::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool SortAndWriteResponse::success() const {
  // @@protoc_insertion_point(field_get:meringue.SortAndWriteResponse.success)
  return _internal_success();
}
inline void SortAndWriteResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:meringue.SortAndWriteResponse.success)
}
inline bool SortAndWriteResponse::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void SortAndWriteResponse::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.success_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace meringue


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_meringue_2eproto_2epb_2eh
